subCategoryGridModel?.result?[index].isInCart == "No"
                                          ? ElevatedButton(
                                        onPressed: () {
                                          int productQuantity = int.parse(subCategoryGridModel?.result?[index].productQty ?? "0");
                                          productQuantity++;
                                          String strProductQuantity = productQuantity.toString();
                                          addToCart(
                                              strProductQuantity, subCategoryGridModel?.result?[index].productId ?? '');

                                          setState(() {
                                            subCategoryGridModel?.result?[index].productQty = strProductQuantity;
                                            isTapped = true; // Set the flag to true to switch to Container
                                          });
                                        },
                                        style: ElevatedButton.styleFrom(
                                          backgroundColor: Colors.white,
                                          primary: Colors.black,
                                          onPrimary: Colors.white,
                                          fixedSize: const Size(140, 20),
                                          shape: RoundedRectangleBorder(
                                            borderRadius: BorderRadius.circular(10),
                                          ),
                                        ),
                                        child: Text(
                                          subCategoryGridModel?.result?[index].buttonText ?? "Out of Stock",
                                          style: const TextStyle(fontSize: 14.0, color: primaryColor),
                                        ),
                                      )
                                           :Container(
                                        width: 140,
                                        height: 20,
                                        decoration: BoxDecoration(
                                          color: secondaryColor,
                                          borderRadius: BorderRadius.circular(20),
                                        ),
                                        child: Padding(
                                          padding: const EdgeInsets.only(left: 0.0),
                                          child: Row(
                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                            children: [
                                              IconButton(
                                                onPressed: () {
                                                  setState(() {
                                                    int productQuantity =
                                                    int.parse(subCategoryGridModel?.result?[index].productQty ?? "0");

                                                    if (productQuantity > 0) {
                                                      productQuantity--;
                                                      String strProductQuantity = productQuantity.toString();
                                                      subCategoryGridModel?.result?[index].productQty = strProductQuantity;
                                                    }
                                                  });
                                                },
                                                icon: Container(
                                                  decoration: const BoxDecoration(
                                                    color: primaryColor,
                                                    shape: BoxShape.circle,
                                                  ),
                                                  child: const Icon(
                                                    size: 20,
                                                    Icons.remove,
                                                    color: Colors.white,
                                                  ),
                                                ),
                                              ),
                                              Text(
                                                subCategoryGridModel?.result?[index].productQty ?? "0",
                                                style: const TextStyle(fontSize: 14.0, color: Colors.white),
                                              ),
                                              IconButton(
                                                onPressed: () {
                                                  setState(() {
                                                    int productQuantity =
                                                    int.parse(subCategoryGridModel?.result?[index].productQty ?? "0");

                                                    productQuantity++;
                                                    String strProductQuantity = productQuantity.toString();
                                                    subCategoryGridModel?.result?[index].productQty = strProductQuantity;
                                                  });
                                                },
                                                icon: Container(
                                                  decoration: const BoxDecoration(
                                                    color: primaryColor,
                                                    shape: BoxShape.circle,
                                                  ),
                                                  child: const Icon(
                                                    size: 20,
                                                    Icons.add,
                                                    color: Colors.white,
                                                  ),
                                                ),
                                              ),
                                            ],
                                          ),
                                        ),
                                      )